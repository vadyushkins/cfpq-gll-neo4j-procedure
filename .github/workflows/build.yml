# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "readme" ]
  pull_request:
    branches: [ "main", "readme" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -DskipTests -B package --file pom.xml
    - run: mkdir build && cp target/*.jar build
    - uses: actions/upload-artifact@v3
      with:
        name: cfpq-gll-neo4j-procedure
        path: build
      

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
  
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@readme
    - name: Create release
      uses: Roang-zero1/github-create-release-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload release artifacts
      uses: Roang-zero1/github-upload-release-artifacts-action@v2
      with:
        args: "build"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
